export GOPATH=~/.go
export GOROOT=~/software/go
export PATH="$PATH:$GOROOT/bin"
export GOPATH=$GOPATH:/root/code/megam/workspace/go


sudo docker pull busybox
sudo docker tag busybox 127.0.0.1:5000/busybox

sudo docker push 127.0.0.1:5000/busybox

sudo docker pull 127.0.0.1:5000/busybox


sudo docker tag alpine localhost:6000/alpine
sudo docker push localhost:6000/alpine
sudo docker pull 138.201.98.3:6000/alpine


s3_region: _env:AWS_REGION
    s3_bucket: _env:AWS_BUCKET
    boto_bucket: _env:AWS_BUCKET
    storage_path: _env:STORAGE_PATH:/registry
    s3_encrypt: _env:AWS_ENCRYPT:false
    s3_secure: _env:AWS_SECURE:false
    s3_access_key: _env:AWS_KEY
    s3_secret_key: _env:AWS_SECRET
    s3_use_sigv4: _env:AWS_USE_SIGV4
    boto_host: _env:AWS_HOST
    boto_port: _env:AWS_PORT
    boto_calling_format: _env:AWS_CALLING_FORMAT



export AWS_REGION=default
export AWS_BUCKET=vijay-test-bucket1

export SETTINGS_FLAVOR=s3
export AWS_BUCKET=vijay-test-bucket1 
export AWS_REGION=default 
export STORAGE_PATH=/registry 
export AWS_KEY=D9Y365NCVCG2UNZZL0MH 
export AWS_SECRET=SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di 
export AWS_HOST=cephs3.com    
export AWS_SECURE=false 
export AWS_ENCRYPT=false
export AWS_PORT=80 
export AWS_DEBUG=true 
export AWS_CALLING_FORMAT=OrdinaryCallingFormat 
          
          
       -p 127.0.0.1:6000:5000     --name s3registry 
       


ln -s /root/software/registry /usr/bin/registry

registry serve ~/code/megam/workspace/go/src/github.com/docker/distribution/cmd/registry/config-example.yml


  "access_key": "D9Y365NCVCG2UNZZL0MH",
  "secret_key": "SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di"


docker run -d --name ceph-docker-registry \
         -e AWS_BUCKET=vijay-test-bucket1 \
         -e AWS_KEY=D9Y365NCVCG2UNZZL0MH \
         -e AWS_SECRET=SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di \
         -e AWS_HOST=88.198.139.81 \
         -e AWS_SECURE=true \
         -e AWS_PORT=80 \
         -e AWS_CALLING_FORMAT=boto.s3.connection.OrdinaryCallingFormat \
         -p 5000:5000 \
         docker-registry
         
docker stop s3registry && docker rm -v s3registry     

docker run \
         -e SETTINGS_FLAVOR=s3 \
         -e AWS_BUCKET=vijay-test-bucket1 \
         -e AWS_REGION=default \
         -e STORAGE_PATH=/registry \
         -e AWS_KEY=D9Y365NCVCG2UNZZL0MH \
         -e AWS_SECRET=SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di \
         -p 5000:5000 \
         -e AWS_HOST=88.198.139.81 \
         -e AWS_SECURE=false \
         -e AWS_ENCRYPT=false \
         -e AWS_PORT=80 \
         -e AWS_DEBUG=true \
         -e AWS_CALLING_FORMAT=OrdinaryCallingFormat \
          --name s3registry \
         registry
         
         

prod:
  storage: s3
  s3_bucket: vijay-test-bucket1
  s3_secure: false
  s3_encrypt: false
  storage_path: /registry
  s3_access_key: D9Y365NCVCG2UNZZL0MH
  s3_secret_key: SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di
  boto_host: 88.198.139.81
  boto_port: 80
  boto_debug: true
  boto_calling_format: OrdinaryCallingFormat
  
  



swig -python -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu -I/usr/include -I/usr/include/openssl -includeall -modern -o SWIG/_m2crypto_wrap.c SWIG/_m2crypto.i

unable to execute 'swig': No such file or directory

error: command 'swig' failed with exit status 1

----------------------------------------
Cleaning up...
Command /usr/bin/python -c "import setuptools, tokenize;__file__='/tmp/pip_build_root/M2Crypto/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))" install --record /tmp/pip-Efklff-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /tmp/pip_build_root/M2Crypto
Traceback (most recent call last):
  File "/usr/bin/pip", line 9, in <module>
    load_entry_point('pip==1.5.4', 'console_scripts', 'pip')()
  File "/usr/lib/python2.7/dist-packages/pip/__init__.py", line 235, in main
    return command.main(cmd_args)
  File "/usr/lib/python2.7/dist-packages/pip/basecommand.py", line 161, in main
    text = '\n'.join(complete_log)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 33: ordinal not in range(128)




https://github.com/docker/distribution/issues/1745

sudo docker run -d \
                -e MON_IP=138.201.98.3 \
                -e CEPH_NETWORK=138.201.98.0/24 \
                --net=host \
                --name=ceph-demo \
                ceph/demo
                
                
sudo docker exec ceph-demo radosgw-admin user create --uid="kiwenlau" --display-name="kiwenlau"

{
    "user_id": "kiwenlau",
    "display_name": "kiwenlau",
    "email": "",
    "suspended": 0,
    "max_buckets": 1000,
    "auid": 0,
    "subusers": [],
    "keys": [
        {
            "user": "kiwenlau",
            "access_key": "2M990JLG44VV0J8TBS9O",
            "secret_key": "AMmE37fBkPWT0Yaj4r4i7GRbgHFWt7YRtmzK5f5v"
        }
    ],
    "swift_keys": [],
    "caps": [],
    "op_mask": "read, write, delete",
    "default_placement": "",
    "placement_tags": [],
    "bucket_quota": {
        "enabled": false,
        "max_size_kb": -1,
        "max_objects": -1
    },
    "user_quota": {
        "enabled": false,
        "max_size_kb": -1,
        "max_objects": -1
    },
    "temp_url_keys": []
}

sudo docker run -d \
                -v /root:/ \
                --net=host \
                --name=docker-registry2 \
                registry




docker run -d -p 6000:6000  --name s3registry  -v `pwd`/config.yml:/etc/docker/registry/config.yml registry


######## works ok 

docker-registry docker run \
        -e SETTINGS_FLAVOR=ceph-s3 \
        -e AWS_BUCKET=vijay-test-bucket1 \
        -e STORAGE_PATH=/registry \
        -e AWS_REGION=default \
        -e AWS_KEY=D9Y365NCVCG2UNZZL0MH \
        -e AWS_SECRET=SooHgSIzDIxoTQB5vdUmIVww5PO0u3Afc13344di \
        -e AWS_CALLING_FORMAT=boto.s3.connection.OrdinaryCallingFormat \
        -e AWS_PORT=80 \
        -e AWS_HOST=88.198.139.81 \
        -p 5000:5000 \
        registry

