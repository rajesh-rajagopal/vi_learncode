Intro:

  This is fpm version 1.3.3

  If you think something is wrong, it's probably a bug! :)
  Please file these here: https://github.com/jordansissel/fpm/issues

  You can find support on irc (#fpm on freenode irc) or via email with
  fpm-users@googlegroups.com

Usage:
    fpm [OPTIONS] [ARGS] ...

Parameters:
    [ARGS] ...                    Inputs to the source package type. For the 'dir' type, this is the files and directories you want to include in the package. For others, like 'gem', it specifies the packages to download and use as the gem input

Options:
    -t OUTPUT_TYPE                the type of package you want to create (deb, rpm, solaris, etc)
    -s INPUT_TYPE                 the package type to use as input (gem, rpm, python, etc)
    -C CHDIR                      Change directory to here before searching for files
    --prefix PREFIX               A path to prefix files with when building the target package. This may be necessary for all input packages. For example, the 'gem' type will prefix with your gem directory automatically.
    -p, --package OUTPUT          The package file path to output.
    -f, --force                   Force output even if it will overwrite an existing file (default: false)
    -n, --name NAME               The name to give to the package
    --log LEVEL                   Set the log level. Values: error, warn, info, debug.
    --verbose                     Enable verbose output
    --debug                       Enable debug output
    --debug-workspace             Keep any file workspaces around for debugging. This will disable automatic cleanup of package staging and build paths. It will also print which directories are available.
    -v, --version VERSION         The version to give to the package (default: 1.0)
    --iteration ITERATION         The iteration to give to the package. RPM calls this the 'release'. FreeBSD calls it 'PORTREVISION'. Debian calls this 'debian_revision'
    --epoch EPOCH                 The epoch value for this package. RPM and Debian calls this 'epoch'. FreeBSD calls this 'PORTEPOCH'
    --license LICENSE             (optional) license name for this package
    --vendor VENDOR               (optional) vendor name for this package
    --category CATEGORY           (optional) category this package belongs to (default: "none")
    -d, --depends DEPENDENCY      A dependency. This flag can be specified multiple times. Value is usually in the form of: -d 'name' or -d 'name > version'
    --no-depends                  Do not list any dependencies in this package (default: false)
    --no-auto-depends             Do not list any dependencies in this package automatically (default: false)
    --provides PROVIDES           What this package provides (usually a name). This flag can be specified multiple times.
    --conflicts CONFLICTS         Other packages/versions this package conflicts with. This flag can specified multiple times.
    --replaces REPLACES           Other packages/versions this package replaces. This flag can be specified multiple times.
    --config-files CONFIG_FILES   Mark a file in the package as being a config file. This uses 'conffiles' in debs and %config in rpm. If you have multiple files to mark as configuration files, specify this flag multiple times.  If argument is directory all files inside it will be recursively marked as config files.
    --directories DIRECTORIES     Recursively mark a directory as being owned by the package
    -a, --architecture ARCHITECTURE The architecture name. Usually matches 'uname -m'. For automatic values, you can use '-a all' or '-a native'. These two strings will be translated into the correct value for your platform and target package type.
    -m, --maintainer MAINTAINER   The maintainer of this package. (default: "<djhaskin987@djhaskin987-S301LA>")
    -S, --package-name-suffix PACKAGE_NAME_SUFFIX a name suffix to append to package and dependencies.
    -e, --edit                    Edit the package spec before building. (default: false)
    -x, --exclude EXCLUDE_PATTERN Exclude paths matching pattern (shell wildcard globs valid here). If you have multiple file patterns to exclude, specify this flag multiple times.
    --description DESCRIPTION     Add a description for this package. You can include '
                                  ' sequences to indicate newline breaks. (default: "no description")
    --url URI                     Add a url for this package. (default: "http://example.com/no-uri-given")
    --inputs INPUTS_PATH          The path to a file containing a newline-separated list of files and dirs to use as input.
    --post-install FILE           (DEPRECATED, use --after-install) A script to be run after package installation
    --pre-install FILE            (DEPRECATED, use --before-install) A script to be run before package installation
    --post-uninstall FILE         (DEPRECATED, use --after-remove) A script to be run after package removal
    --pre-uninstall FILE          (DEPRECATED, use --before-remove) A script to be run before package removal
    --after-install FILE          A script to be run after package installation
    --before-install FILE         A script to be run before package installation
    --after-remove FILE           A script to be run after package removal
    --before-remove FILE          A script to be run before package removal
    --after-upgrade FILE          A script to be run after package upgrade. If not specified,
                                  --before-install, --after-install, --before-remove, and 
                                  --after-remove wil behave in a backwards-compatible manner
                                  (they will not be upgrade-case aware).
                                  Currently only supports deb and rpm packages.
    --before-upgrade FILE         A script to be run before package upgrade. If not specified,
                                  --before-install, --after-install, --before-remove, and 
                                  --after-remove wil behave in a backwards-compatible manner
                                  (they will not be upgrade-case aware).
                                  Currently only supports deb and rpm packages.
    --template-scripts            Allow scripts to be templated. This lets you use ERB to template your packaging scripts (for --after-install, etc). For example, you can do things like <%= name %> to get the package name. For more information, see the fpm wiki: https://github.com/jordansissel/fpm/wiki/Script-Templates
    --template-value KEY=VALUE    Make 'key' available in script templates, so <%= key %> given will be the provided value. Implies --template-scripts
    --workdir WORKDIR             The directory you want fpm to do its work in, where 'work' is any file copying, downloading, etc. Roughly any scratch space fpm needs to build your package. (default: "/tmp")
    --gem-bin-path DIRECTORY      (gem only) The directory to install gem executables
    --gem-package-prefix NAMEPREFIX (gem only) (DEPRECATED, use --package-name-prefix) Name to prefix the package name with.
    --gem-package-name-prefix PREFIX (gem only) Name to prefix the package name with. (default: "rubygem")
    --gem-gem PATH_TO_GEM         (gem only) The path to the 'gem' tool (defaults to 'gem' and searches your $PATH) (default: "gem")
    --[no-]gem-fix-name           (gem only) Should the target package name be prefixed? (default: true)
    --[no-]gem-fix-dependencies   (gem only) Should the package dependencies be prefixed? (default: true)
    --[no-]gem-env-shebang        (gem only) Should the target package have the shebang rewritten to use env? (default: true)
    --[no-]gem-prerelease         (gem only) Allow prerelease versions of a gem (default: false)
    --gem-disable-dependency gem_name (gem only) The gem name to remove from dependency list
    --[no-]gem-version-bins       (gem only) Append the version to the bins (default: false)
    --[no-]deb-ignore-iteration-in-dependencies (deb only) For '=' (equal) dependencies, allow iterations on the specified version. Default is to be specific. This option allows the same version of a package but any iteration is permitted
    --deb-build-depends DEPENDENCY (deb only) Add DEPENDENCY as a Build-Depends
    --deb-pre-depends DEPENDENCY  (deb only) Add DEPENDENCY as a Pre-Depends
    --deb-compression COMPRESSION (deb only) The compression type to use, must be one of gz, bzip2, xz. (default: "gz")
    --deb-custom-control FILEPATH (deb only) Custom version of the Debian control file.
    --deb-config SCRIPTPATH       (deb only) Add SCRIPTPATH as debconf config file.
    --deb-templates FILEPATH      (deb only) Add FILEPATH as debconf templates file.
    --deb-installed-size KILOBYTES (deb only) The installed size, in kilobytes. If omitted, this will be calculated automatically
    --deb-priority PRIORITY       (deb only) The debian package 'priority' value. (default: "extra")
    --[no-]deb-use-file-permissions (deb only) Use existing file permissions when defining ownership and modes
    --deb-user USER               (deb only) The owner of files in this package (default: "root")
    --deb-group GROUP             (deb only) The group owner of files in this package (default: "root")
    --deb-changelog FILEPATH      (deb only) Add FILEPATH as debian changelog
    --deb-recommends PACKAGE      (deb only) Add PACKAGE to Recommends
    --deb-suggests PACKAGE        (deb only) Add PACKAGE to Suggests
    --deb-meta-file FILEPATH      (deb only) Add FILEPATH to DEBIAN directory
    --deb-interest EVENT          (deb only) Package is interested in EVENT trigger
    --deb-activate EVENT          (deb only) Package activates EVENT trigger
    --deb-field 'FIELD: VALUE'    (deb only) Add custom field to the control file
    --deb-shlibs SHLIBS           (deb only) Include control/shlibs content. This flag expects a string that is used as the contents of the shlibs file. See the following url for a description of this file and its format: http://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-shlibs
    --deb-init FILEPATH           (deb only) Add FILEPATH as an init script
    --deb-default FILEPATH        (deb only) Add FILEPATH as /etc/default configuration
    --deb-upstart FILEPATH        (deb only) Add FILEPATH as an upstart script
    --npm-bin NPM_EXECUTABLE      (npm only) The path to the npm executable you wish to run. (default: "npm")
    --npm-package-name-prefix PREFIX (npm only) Name to prefix the package name with. (default: "node")
    --npm-registry NPM_REGISTRY   (npm only) The npm registry to use instead of the default.
    --[no-]rpm-use-file-permissions (rpm only) Use existing file permissions when defining ownership and modes.
    --rpm-user USER               (rpm only) Set the user to USER in the %files section. Overrides the user when used with use-file-permissions setting.
    --rpm-group GROUP             (rpm only) Set the group to GROUP in the %files section. Overrides the group when used with use-file-permissions setting.
    --rpm-defattrfile ATTR        (rpm only) Set the default file mode (%defattr). (default: "-")
    --rpm-defattrdir ATTR         (rpm only) Set the default dir mode (%defattr). (default: "-")
    --rpm-rpmbuild-define DEFINITION (rpm only) Pass a --define argument to rpmbuild.
    --rpm-digest md5|sha1|sha256|sha384|sha512 (rpm only) Select a digest algorithm. md5 works on the most platforms. (default: "md5")
    --rpm-compression none|xz|gzip|bzip2 (rpm only) Select a compression method. gzip works on the most platforms. (default: "gzip")
    --rpm-os OS                   (rpm only) The operating system to target this rpm for. You want to set this to 'linux' if you are using fpm on OS X, for example
    --rpm-changelog FILEPATH      (rpm only) Add changelog from FILEPATH contents
    --[no-]rpm-sign               (rpm only) Pass --sign to rpmbuild
    --[no-]rpm-auto-add-directories (rpm only) Auto add directories not part of filesystem
    --rpm-auto-add-exclude-directories DIRECTORIES (rpm only) Additional directories ignored by '--rpm-auto-add-directories' flag
    --[no-]rpm-autoreqprov        (rpm only) Enable RPM's AutoReqProv option
    --[no-]rpm-autoreq            (rpm only) Enable RPM's AutoReq option
    --[no-]rpm-autoprov           (rpm only) Enable RPM's AutoProv option
    --rpm-attr ATTRFILE           (rpm only) Set the attribute for a file (%attr).
    --rpm-init FILEPATH           (rpm only) Add FILEPATH as an init script
    --rpm-filter-from-provides REGEX (rpm only) Set %filter_from_provides to the supplied REGEX.
    --rpm-filter-from-requires REGEX (rpm only) Set %filter_from_requires to the supplied REGEX.
    --[no-]rpm-ignore-iteration-in-dependencies (rpm only) For '=' (equal) dependencies, allow iterations on the specified version. Default is to be specific. This option allows the same version of a package but any iteration is permitted
    --[no-]rpm-verbatim-gem-dependencies (rpm only) When converting from a gem, leave the old (fpm 0.4.x) style dependency names. This flag will use the old 'rubygem-foo' names in rpm requires instead of the redhat style rubygem(foo). (default: false)
    --rpm-verifyscript FILE       (rpm only) a script to be run on verification
    --rpm-pretrans FILE           (rpm only) pretrans script
    --rpm-posttrans FILE          (rpm only) posttrans script
    --rpm-trigger-before-install '[OPT]PACKAGE: FILEPATH' (rpm only) Adds a rpm trigger script located in FILEPATH, having 'OPT' options and linking to 'PACKAGE'. PACKAGE can be a comma seperated list of packages. See: http://rpm.org/api/4.4.2.2/triggers.html
    --rpm-trigger-after-install '[OPT]PACKAGE: FILEPATH' (rpm only) Adds a rpm trigger script located in FILEPATH, having 'OPT' options and linking to 'PACKAGE'. PACKAGE can be a comma seperated list of packages. See: http://rpm.org/api/4.4.2.2/triggers.html
    --rpm-trigger-before-uninstall '[OPT]PACKAGE: FILEPATH' (rpm only) Adds a rpm trigger script located in FILEPATH, having 'OPT' options and linking to 'PACKAGE'. PACKAGE can be a comma seperated list of packages. See: http://rpm.org/api/4.4.2.2/triggers.html
    --rpm-trigger-after-target-uninstall '[OPT]PACKAGE: FILEPATH' (rpm only) Adds a rpm trigger script located in FILEPATH, having 'OPT' options and linking to 'PACKAGE'. PACKAGE can be a comma seperated list of packages. See: http://rpm.org/api/4.4.2.2/triggers.html
    --cpan-perl-bin PERL_EXECUTABLE (cpan only) The path to the perl executable you wish to run. (default: "perl")
    --cpan-cpanm-bin CPANM_EXECUTABLE (cpan only) The path to the cpanm executable you wish to run. (default: "cpanm")
    --cpan-mirror CPAN_MIRROR     (cpan only) The CPAN mirror to use instead of the default.
    --[no-]cpan-mirror-only       (cpan only) Only use the specified mirror for metadata. (default: false)
    --cpan-package-name-prefix NAME_PREFIX (cpan only) Name to prefix the package name with. (default: "perl")
    --[no-]cpan-test              (cpan only) Run the tests before packaging? (default: true)
    --cpan-perl-lib-path PERL_LIB_PATH (cpan only) Path of target Perl Libraries
    --pear-package-name-prefix PREFIX (pear only) Name prefix for pear package (default: "php-pear")
    --pear-channel CHANNEL_URL    (pear only) The pear channel url to use instead of the default.
    --[no-]pear-channel-update    (pear only) call 'pear channel-update' prior to installation
    --pear-bin-dir BIN_DIR        (pear only) Directory to put binaries in
    --pear-php-bin PHP_BIN        (pear only) Specify php executable path if differs from the os used for packaging
    --pear-php-dir PHP_DIR        (pear only) Specify php dir relative to prefix if differs from pear default (pear/php)
    --pear-data-dir DATA_DIR      (pear only) Specify php dir relative to prefix if differs from pear default (pear/data)
    --python-bin PYTHON_EXECUTABLE (python only) The path to the python executable you wish to run. (default: "python")
    --python-easyinstall EASYINSTALL_EXECUTABLE (python only) The path to the easy_install executable tool (default: "easy_install")
    --python-pip PIP_EXECUTABLE   (python only) The path to the pip executable tool. If not specified, easy_install is used instead (default: nil)
    --python-pypi PYPI_URL        (python only) PyPi Server uri for retrieving packages. (default: "http://pypi.python.org/simple")
    --python-package-prefix NAMEPREFIX (python only) (DEPRECATED, use --package-name-prefix) Name to prefix the package name with.
    --python-package-name-prefix PREFIX (python only) Name to prefix the package name with. (default: "python")
    --[no-]python-fix-name        (python only) Should the target package name be prefixed? (default: true)
    --[no-]python-fix-dependencies (python only) Should the package dependencies be prefixed? (default: true)
    --[no-]python-downcase-name   (python only) Should the target package name be in lowercase? (default: true)
    --[no-]python-downcase-dependencies (python only) Should the package dependencies be in lowercase? (default: true)
    --python-install-bin BIN_PATH (python only) The path to where python scripts should be installed to.
    --python-install-lib LIB_PATH (python only) The path to where python libs should be installed to (default depends on your python installation). Want to find out what your target platform is using? Run this: python -c 'from distutils.sysconfig import get_python_lib; print get_python_lib()'
    --python-install-data DATA_PATH (python only) The path to where data should be installed to. This is equivalent to 'python setup.py --install-data DATA_PATH
    --[no-]python-dependencies    (python only) Include requirements defined in setup.py as dependencies. (default: true)
    --[no-]python-obey-requirements-txt (python only) Use a requirements.txt file in the top-level directory of the python package for dependency detection. (default: false)
    --python-scripts-executable PYTHON_EXECUTABLE (python only) Set custom python interpreter in installing scripts. By default distutils will replace python interpreter in installing scripts (specified by shebang) with current python interpreter (sys.executable). This option is equivalent to appending 'build_scripts --executable PYTHON_EXECUTABLE' arguments to 'setup.py install' command.
    --osxpkg-identifier-prefix IDENTIFIER_PREFIX (osxpkg only) Reverse domain prefix prepended to package identifier, ie. 'org.great.my'. If this is omitted, the identifer will be the package name.
    --[no-]osxpkg-payload-free    (osxpkg only) Define no payload, assumes use of script options. (default: false)
    --osxpkg-ownership OWNERSHIP  (osxpkg only) --ownership option passed to pkgbuild. Defaults to 'recommended'. See pkgbuild(1). (default: "recommended")
    --osxpkg-postinstall-action POSTINSTALL_ACTION (osxpkg only) Post-install action provided in package metadata. Optionally one of 'logout', 'restart', 'shutdown'.
    --osxpkg-dont-obsolete DONT_OBSOLETE_PATH (osxpkg only) A file path for which to 'dont-obsolete' in the built PackageInfo. Can be specified multiple times.
    --solaris-user USER           (solaris only) Set the user to USER in the prototype files. (default: "root")
    --solaris-group GROUP         (solaris only) Set the group to GROUP in the prototype file. (default: "root")
    -h, --help                    print help
Status 
